name: CI / CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    name: Run tests
    runs-on: ubuntu-latest
    services:
      postgres:
        # Use a recent, stable PostgreSQL image
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          # Database name for testing
          POSTGRES_DB: myanmar_bookreviews_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U postgres -d bookreviews_test"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    env:
      # FIX 1: The host must be the service name 'postgres', not 127.0.0.1
      DATABASE_URL: postgres://postgres:postgres@postgres:5432/myanmar_bookreviews_test
      SECRET_KEY: test-secret-key
      DEBUG: 'False'

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Wait for Postgres
        run: |
          # FIX 2: The pg_isready host must be the service name 'postgres'
          for i in {1..20}; do pg_isready -h postgres -p 5432 && break || sleep 1; done

      - name: Run migrations
        run: |
          python manage.py migrate --noinput

      - name: Run tests
        run: |
          python manage.py test --verbosity=2

  # ----------------------------------------------------------------------
  # Continuous Delivery (CD) Job
  # ----------------------------------------------------------------------

  build-and-publish:
    name: Build and publish Docker image
    runs-on: ubuntu-latest
    # This job only runs if the 'test' job succeeded! (Quality Gate)
    needs: test
    if: github.ref == 'refs/heads/main'
    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Log in to GitHub Container Registry
        # Logs into ghcr.io using the default GITHUB_TOKEN secret
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push image
        # Builds the image using your Dockerfile and tags it as 'latest'
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ghcr.io/${{ github.repository_owner }}/${{ github.repository }}:latest
          file: ./Dockerfile

 
