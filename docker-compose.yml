
services:
  # Service for your Django application
  web: # <--- This is the service name for your Django app
    build: . # <--- Build using the Dockerfile in the current directory
    command: python manage.py runserver 0.0.0.0:8000 # Command to run the development server
    volumes:
      - d:/all_pannsattlann_books.json:/app/all_pannsattlann_books.json # Mount your project code into the container for easy development updates
    ports:
      - "8001:8001" # Map host port 8000 to container port 8000
    env_file:
      - .env # Load environment variables from the .env file
    depends_on:
      - postgres # Ensure the database service starts before the web service

  # Service for your PostgreSQL database
  postgres: # <--- This is the service name for your database
    image: postgres:15-alpine # Use the official PostgreSQL image
    container_name: postgres_container # Optional: give the container a fixed name
    restart: always # Restart if the container stops
    environment: # Set environment variables for PostgreSQL initialization
      POSTGRES_DB: ${DB_NAME} # Get DB_NAME from .env
      POSTGRES_USER: ${DB_USER} # Get DB_USER from .env
      POSTGRES_PASSWORD: ${DB_USER_PASSWORD} # Get DB_USER_PASSWORD from .env
    ports:
      - "5432:5432" # Map host port 5432 to container port 5432 (optional, useful for connecting with external tools like pgAdmin)
    volumes:
      - postgres_data:/var/lib/postgresql/data # Persist database data

volumes:
  postgres_data: # Define the named volume for data persistence